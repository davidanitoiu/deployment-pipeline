{"version":3,"sources":["utils/store/actions/pipeline.ts","components/AvailableEnvironments.tsx","components/EnvironmentProperties.tsx","components/PipelineInnerNode.tsx","components/InteractiveFlowchart.tsx","App.tsx","serviceWorker.ts","utils/store/reducer/pipeline.ts","utils/store/reducer/environments.ts","utils/store/index.ts","index.tsx","utils/index.ts","utils/templates.ts","utils/theme.ts","utils/validateLink.ts","utils/usePipeline.ts","utils/generators.ts","utils/customCallbacks.ts"],"names":["addNode","createAction","node","payload","properties","position","addLink","link","id","from","to","removeLink","removeNode","name","setAutoDeploy","selectedNodeName","checked","addPipeline","title","setSelectedPipeline","setNodePosition","useStyles","makeStyles","theme","sidebarItem","cursor","AvailableEnvironments","dispatch","useDispatch","environments","useSelector","state","pipeline","find","pipelines","chart","useContext","PipelineContext","classes","diff","useMemo","nodeTitles","map","nodes","envNames","environment","difference","useEffect","Object","keys","length","pipelineNodeTitles","newNode","Typography","variant","align","Divider","List","i","ListItem","key","className","draggable","onDragStart","event","data","environmentName","env","sidebarItemProps","type","ports","getChartData","dataTransfer","setData","JSON","stringify","ListItemText","primary","EnvironmentProperties","chartDispatch","selectedId","selected","selectedProps","secondary","os","kernel","host","ListItemSecondaryAction","Checkbox","edge","onChange","setChartProperty","nodeId","value","color","autoDeploy","inputProps","pipelineCard","palette","main","display","justifyContent","alignItems","PipelineNodeInner","container","width","height","minWidth","sidebar","background","paper","flexDirection","flexShrink","InteractiveFlowchart","selectedPipeline","usePipeline","callbacks","contextValue","Provider","onMouseEnter","Components","NodeInner","config","snapToGrid","validateLink","app","minHeight","backgroundColor","padding","spacing","input","addButton","margin","flex","App","useState","pipelineName","setPipelineName","createPipeline","exists","isEmpty","isValidName","TextField","label","target","onKeyDown","IconButton","onClick","Add","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore","aria-controls","kebabCase","ExpansionPanelDetails","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","createReducer","links","x","y","remove","push","rootReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","createContext","port1","port2","chartTemplate","scale","offset","hovered","nodeTemplate","orientation","createMuiTheme","orange","teal","fromNodeId","fromPortId","toNodeId","toPortId","linkTuple","portId","validType","targetIsParentNode","some","sourceHasNoParent","executeChartAction","action","initialState","reduce","prevNodes","prevLinks","generateChart","useReducer","mapValues","actions","func","onLinkComplete","actionLink","argsWithChart","isLinkValid","onDeleteKey","nodeName","selectedLink","linkId","onDragNodeStop","innerText","customCallbacks"],"mappings":"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","file":"static/js/main.8d35d5ad.chunk.js","sourcesContent":["import { INode, IPosition } from \"@mrblenny/react-flow-chart\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addNode = createAction('pipeline/addNode', (node: INode) => ({\r\n    payload: {\r\n        ...node.properties,\r\n        position: node.position\r\n    }\r\n}));\r\n\r\nexport const addLink = createAction('pipeline/addLink', (link) => ({\r\n    payload: {\r\n        id: `${link.from}_${link.to}`,\r\n        from: link.from,\r\n        to: link.to\r\n    }\r\n}));\r\n\r\nexport const removeLink = createAction('pipeline/removeLink', (id: string) => ({\r\n    payload: {\r\n        id,\r\n    }\r\n}));\r\n\r\nexport const removeNode = createAction('pipeline/removeNode', (name: string) => ({\r\n    payload: {\r\n        name,\r\n    }\r\n}));\r\n\r\nexport const setAutoDeploy = createAction('pipeline/setAutoDeploy', ({ selectedNodeName, checked }: { selectedNodeName: string, checked: boolean }) => ({\r\n    payload: {\r\n        selectedNodeName,\r\n        checked\r\n    }\r\n}));\r\nexport const addPipeline = createAction('pipeline/addPipeline', (title: string) => ({\r\n    payload: {\r\n        title\r\n    }\r\n}));\r\nexport const setSelectedPipeline = createAction('pipeline/setSelectedPipeline', (title: string) => ({\r\n    payload: {\r\n        title\r\n    }\r\n}));\r\n\r\nexport const setNodePosition = createAction('pipeline/setNodePosition', (name:string,position:IPosition) => ({\r\n    payload: {\r\n        name,\r\n        position\r\n    }\r\n}))\r\n","import {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { INode } from \"@mrblenny/react-flow-chart\";\r\nimport { difference, find, map } from \"lodash\";\r\nimport React, { useContext, useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PipelineContext } from \"../utils\";\r\nimport { RootState } from \"../utils/store\";\r\nimport { addNode } from \"../utils/store/actions/pipeline\";\r\nimport { sidebarItemProps } from \"../utils/templates\";\r\n\r\nconst useStyles = makeStyles<Theme>((theme) => ({\r\n  sidebarItem: {\r\n    cursor: \"grab\",\r\n  },\r\n}));\r\n\r\nfunction AvailableEnvironments({ title }: { title: string }) {\r\n  const dispatch = useDispatch();\r\n  const environments = useSelector((state: RootState) => state.environments);\r\n  const pipeline = useSelector(\r\n    (state: RootState) => find(state.pipeline.pipelines, { title })!.chart\r\n  );\r\n  const { chart } = useContext(PipelineContext)!;\r\n  const classes = useStyles();\r\n\r\n  const diff = useMemo(() => {\r\n    const nodeTitles = map(chart.nodes, (node) => node.properties.name);\r\n    const envNames = map(environments, (environment) => environment.name);\r\n\r\n    return difference(envNames, nodeTitles);\r\n    // eslint-disable-next-line\r\n  }, [chart.nodes]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(chart.nodes).length > pipeline.nodes.length) {\r\n      const nodeTitles = map(chart.nodes, (node) => node.properties.name);\r\n      const pipelineNodeTitles = map(pipeline.nodes, (node) => node.name);\r\n      const diff = difference(nodeTitles, pipelineNodeTitles);\r\n      const newNode = find(\r\n        chart.nodes,\r\n        (node) => node.properties.name === diff[0]\r\n      )!;\r\n      dispatch(addNode(newNode));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [chart.nodes]);\r\n\r\n  const getChartData = (environmentName: string): Partial<INode> => {\r\n    const env = find(\r\n      environments,\r\n      (environment) => environment.name === environmentName\r\n    );\r\n    return {\r\n      ...sidebarItemProps,\r\n      type: sidebarItemProps.type,\r\n      ports: sidebarItemProps.ports,\r\n      properties: {\r\n        ...env!,\r\n      },\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant={\"overline\"} align={\"center\"}>\r\n        Drag & Drop\r\n      </Typography>\r\n      <Divider />\r\n      <List>\r\n        {diff.map((environment, i) => (\r\n          <ListItem\r\n            key={environment}\r\n            className={classes.sidebarItem}\r\n            draggable={true}\r\n            onDragStart={(event: React.DragEvent<HTMLElement>) => {\r\n              const data = getChartData(environment);\r\n              event.dataTransfer.setData(\r\n                \"react-flow-chart\",\r\n                JSON.stringify(data)\r\n              );\r\n            }}\r\n          >\r\n            <ListItemText primary={environment} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AvailableEnvironments;\r\n","import { Checkbox, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\"\r\nimport React, { useContext } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { PipelineContext, setChartProperty } from \"../utils\"\r\nimport { setAutoDeploy } from \"../utils/store/actions/pipeline\"\r\n\r\nfunction EnvironmentProperties() {\r\n  const dispatch = useDispatch()\r\n  const { chart, chartDispatch } = useContext(PipelineContext)!\r\n  const selectedId = chart.selected.id\r\n  const selectedProps = chart.nodes[selectedId!].properties\r\n\r\n  const handleAutoDeploy = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    checked: boolean\r\n  ) => {\r\n    dispatch(setAutoDeploy({ selectedNodeName: selectedProps.name, checked }))\r\n    chartDispatch(\r\n      setChartProperty({\r\n        nodeId: selectedId!,\r\n        name: \"autoDeploy\",\r\n        value: checked,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        <ListItem>\r\n          <ListItemText primary={\"Name\"} secondary={selectedProps.name} />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary={\"OS\"} secondary={selectedProps.os} />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary={\"Kernel\"} secondary={selectedProps.kernel} />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary={\"Host\"} secondary={selectedProps.host} />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary={\"Auto Deploy\"} />\r\n          <ListItemSecondaryAction>\r\n            <Checkbox\r\n              edge=\"end\"\r\n              onChange={handleAutoDeploy}\r\n              color={\"primary\"}\r\n              checked={selectedProps.autoDeploy}\r\n              name={selectedProps.name}\r\n              inputProps={{\r\n                \"aria-label\": selectedProps.name,\r\n              }}\r\n            />\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EnvironmentProperties\r\n","import React from \"react\";\r\nimport { INodeInnerDefaultProps } from \"@mrblenny/react-flow-chart\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Theme, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles<Theme>((theme) => ({\r\n  pipelineCard: {\r\n    color: theme.palette.primary.main,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport const PipelineNodeInner = ({ node }: INodeInnerDefaultProps) => {\r\n  const classes = useStyles();\r\n  const { name } = node.properties;\r\n\r\n  return (\r\n    <div className={classes.pipelineCard}>\r\n      <Typography>{name}</Typography>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles, Theme } from \"@material-ui/core\";\r\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\r\nimport React, { useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PipelineContext, usePipeline, validateLink } from \"../utils\";\r\nimport { RootState } from \"../utils/store\";\r\nimport { setSelectedPipeline } from \"../utils/store/actions/pipeline\";\r\nimport AvailableEnvironments from \"./AvailableEnvironments\";\r\nimport EnvironmentProperties from \"./EnvironmentProperties\";\r\nimport { PipelineNodeInner } from \"./PipelineInnerNode\";\r\n\r\nconst useStyles = makeStyles<Theme>((theme) => ({\r\n  container: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    height: \"60vh\",\r\n    \"& .react-draggable\": {\r\n      minWidth: 100,\r\n      height: 50,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n    }\r\n  },\r\n  sidebar: {\r\n    width: 300,\r\n    background: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\ninterface InteractiveFlowchart {\r\n  title: string;\r\n}\r\n\r\nexport const InteractiveFlowchart = ({ title }: InteractiveFlowchart) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const selectedPipeline = useSelector(\r\n    (state: RootState) => state.pipeline.selectedPipeline\r\n  );\r\n  const [chart, callbacks, chartDispatch] = usePipeline(title);\r\n  const contextValue = useMemo(() => ({ chart, callbacks, chartDispatch }), [\r\n    chart,\r\n    callbacks,\r\n    chartDispatch,\r\n  ]);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (title !== selectedPipeline) {\r\n      dispatch(setSelectedPipeline(title));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PipelineContext.Provider value={contextValue}>\r\n      <div onMouseEnter={handleMouseEnter} className={classes.container}>\r\n        <FlowChart\r\n          chart={chart}\r\n          callbacks={callbacks}\r\n          Components={{\r\n            NodeInner: PipelineNodeInner,\r\n          }}\r\n          config={{\r\n            snapToGrid: true,\r\n            validateLink\r\n          }}\r\n        />\r\n        <div className={classes.sidebar}>\r\n          {chart.selected?.type === \"node\" ? (\r\n            <EnvironmentProperties />\r\n          ) : (\r\n            <AvailableEnvironments title={title} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </PipelineContext.Provider>\r\n  );\r\n};\r\n","import { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, IconButton, makeStyles, TextField, Theme, Typography } from \"@material-ui/core\";\r\nimport { Add, ExpandMore } from \"@material-ui/icons\";\r\nimport { find, isEmpty, kebabCase } from \"lodash\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { InteractiveFlowchart } from \"./components/InteractiveFlowchart\";\r\nimport { RootState } from \"./utils/store\";\r\nimport { addPipeline } from \"./utils/store/actions/pipeline\";\r\n\r\nconst useStyles = makeStyles<Theme>((theme) => ({\r\n  app: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    minHeight: \"100vh\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(5),\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  addButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  pipelines: {\r\n    flex: 1,\r\n    width: \"90%\",\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { pipelines } = useSelector(\r\n    (state: RootState) => state.pipeline\r\n  );\r\n  const [pipelineName, setPipelineName] = useState(\"\");\r\n\r\n  const isValidName = (pipelineName: string) => {\r\n    const exists = find(pipelines, { title: pipelineName });\r\n    return !isEmpty(pipelineName) && !exists;\r\n  };\r\n  const createPipeline = () => {\r\n    if (isValidName(pipelineName)) {\r\n      dispatch(addPipeline(pipelineName));\r\n      setPipelineName(\"\");\r\n    }\r\n  };\r\n  const handlePipelineNameChange = ({\r\n    target,\r\n  }: React.ChangeEvent<HTMLInputElement>) => setPipelineName(target.value);\r\n  const handleEnter = ({ key }: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (key === \"Enter\") {\r\n      createPipeline();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.app}>\r\n      <div className={classes.input}>\r\n        <TextField\r\n          variant={\"outlined\"}\r\n          value={pipelineName}\r\n          label={\"Pipeline Name\"}\r\n          onChange={handlePipelineNameChange}\r\n          onKeyDown={handleEnter}\r\n        />\r\n        <IconButton className={classes.addButton} onClick={createPipeline}>\r\n          <Add />\r\n        </IconButton>\r\n      </div>\r\n      <div className={classes.pipelines}>\r\n        {pipelines.map((pipeline) => (\r\n          <ExpansionPanel key={pipeline.title}>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMore />}\r\n              aria-controls={`${kebabCase(pipeline.title)}-content`}\r\n            >\r\n              <Typography variant={\"overline\"}>\r\n                {pipeline.title}\r\n              </Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <InteractiveFlowchart title={pipeline.title} />\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { PipelineReducer } from \"../../types\";\r\nimport { addLink, addNode, addPipeline, removeLink, removeNode, setAutoDeploy, setSelectedPipeline, setNodePosition } from \"../actions/pipeline\";\r\nimport { find, remove } from \"lodash\";\r\n\r\nconst initialState:PipelineReducer = {\r\n    selectedPipeline: \"\",\r\n    pipelines: [{\r\n        title: 'Pipeline',\r\n        chart: {\r\n          links: [\r\n            {\r\n              id: 'Dev_Test',\r\n              from: 'Dev',\r\n              to: 'Test'\r\n            }\r\n          ],\r\n          nodes: [\r\n            {\r\n              name: 'Dev',\r\n              os: 'RHEL 7.6',\r\n              kernel: '3.10.0-957',\r\n              host: 'CTRDFLWC',\r\n              autoDeploy: false,\r\n              position: {\r\n                x: 25,\r\n                y: 50\r\n              }\r\n            },\r\n            {\r\n              name: 'Test',\r\n              os: 'RHEL 7.6',\r\n              kernel: '3.10.0-957',\r\n              host: 'CTRTFLWC',\r\n              autoDeploy: false,\r\n              position: {\r\n                x: 175,\r\n                y: 50\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }]\r\n}\r\n\r\nexport const pipeline = createReducer(initialState, {\r\n    [addPipeline.type]: (state, { payload }) => {\r\n        state.pipelines = [\r\n            ...state.pipelines,\r\n            {\r\n                title: payload.title,\r\n                chart: {\r\n                    links: [],\r\n                    nodes: []\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    [setSelectedPipeline.type]: (state, { payload }) => {\r\n        state.selectedPipeline = payload.title;\r\n    },\r\n    [setNodePosition.type]: (state, {payload}) => {\r\n        const pipeline = find(state.pipelines, { title: state.selectedPipeline })!.chart;\r\n        const node = find(pipeline.nodes,{name: payload.name})!;\r\n        node.position = payload.position;\r\n\r\n    },\r\n    [removeNode.type]: (state, { payload }) => {\r\n        const pipeline = find(state.pipelines, { title: state.selectedPipeline })!.chart\r\n        remove(pipeline.nodes, { name: payload.name });\r\n        remove(pipeline.links, (link) => link.to === payload.name || link.from === payload.name);\r\n    },\r\n    [removeLink.type]: (state, { payload }) => {\r\n        const pipeline = find(state.pipelines, { title: state.selectedPipeline })!.chart\r\n        remove(pipeline.links, { id: payload.id });\r\n    },\r\n    [addNode.type]: (state, { payload }) => {\r\n        const pipeline = find(state.pipelines, { title: state.selectedPipeline })!.chart\r\n        pipeline.nodes.push(payload)\r\n    },\r\n    [addLink.type]: (state, { payload }) => {\r\n        const pipeline = find(state.pipelines, { title: state.selectedPipeline })!.chart\r\n        pipeline.links.push(payload)\r\n    },\r\n    [setAutoDeploy.type]: (state, { payload }) => {\r\n        const pipeline = find(state.pipelines, { title: state.selectedPipeline })!.chart\r\n        const node = find(pipeline.nodes, { name: payload.selectedNodeName });\r\n        node!.autoDeploy = payload.checked\r\n    },\r\n})\r\n","import { createReducer } from \"@reduxjs/toolkit\"\r\nimport { Environment } from \"../../types\";\r\n\r\nconst initialState:Array<Environment> = [\r\n    {\r\n        name: \"Dev\",\r\n        os: \"RHEL 7.6\",\r\n        kernel: \"3.10.0-957\",\r\n        host: \"CTRDFLWC\",\r\n        autoDeploy: false,\r\n    },\r\n    {\r\n        name: \"Test\",\r\n        os: \"RHEL 7.6\",\r\n        kernel: \"3.10.0-957\",\r\n        host: \"CTRTFLWC\",\r\n        autoDeploy: false,\r\n    },\r\n    {\r\n        name: \"Acc\",\r\n        os: \"RHEL 7.5\",\r\n        kernel: \"3.10.0-862\",\r\n        host: \"CTRAFLWC\",\r\n        autoDeploy: false,\r\n    },\r\n    {\r\n        name: \"Prod\",\r\n        os: \"RHEL 7.6\",\r\n        kernel: \"3.10.0-957\",\r\n        host: \"CTRPFLWC\",\r\n        autoDeploy: false,\r\n    }\r\n]\r\n\r\nexport const environments = createReducer(initialState, {\r\n\r\n});\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport {pipeline,environments} from \"./reducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    pipeline,\r\n    environments\r\n})\r\n\r\n// Used for to enable Redux Dev Tools browser extension\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    devTools: process.env.NODE_ENV !== 'production'\r\n})\r\n\r\nexport default store;\r\nexport type RootState = ReturnType<typeof store.getState>","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { theme } from \"./utils/theme\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./utils/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import { createContext, Dispatch } from \"react\";\r\nimport { IChart, IFlowChartCallbacks } from \"@mrblenny/react-flow-chart\";\r\nimport { AnyAction } from \"@reduxjs/toolkit\";\r\n\r\nexport * from \"./theme\"\r\nexport * from \"./types\"\r\nexport * from \"./usePipeline\"\r\nexport * from \"./validateLink\"\r\n\r\ninterface PipelineContext {\r\n    chart: IChart,\r\n    callbacks: IFlowChartCallbacks,\r\n    chartDispatch: Dispatch<AnyAction>\r\n}\r\n\r\nexport const PipelineContext = createContext<PipelineContext | null>(null);","export const sidebarItemProps = {\r\n    type: \"input-output\",\r\n    ports: {\r\n        port1: {\r\n            id: \"port1\",\r\n            type: \"left\",\r\n        },\r\n        port2: {\r\n            id: \"port2\",\r\n            type: \"right\",\r\n        },\r\n    }\r\n}\r\n\r\nexport const chartTemplate = {\r\n    scale: 1,\r\n    offset: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    nodes: {},\r\n    links: {},\r\n    selected: {},\r\n    hovered: {}\r\n}\r\n\r\nexport const nodeTemplate = {\r\n    orientation: 0,\r\n    type: 'input-output',\r\n    ports: {\r\n        port1: {\r\n            id: 'port1',\r\n            type: 'left',\r\n            position: {\r\n                x: 0,\r\n                y: 24.5\r\n            },\r\n            \r\n        },\r\n        port2: {\r\n            id: 'port2',\r\n            type: 'right',\r\n            position: {\r\n                x: 200,\r\n                y: 24.5\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\nimport { orange, teal } from \"@material-ui/core/colors\";\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n        primary: orange,\r\n        secondary: teal,\r\n    }\r\n});","import { IChart, IOnLinkCompleteInput } from \"@mrblenny/react-flow-chart\"\r\nimport { some } from \"lodash\"\r\n\r\nexport interface ValidateLink extends IOnLinkCompleteInput {\r\n    chart: IChart\r\n}\r\n\r\nexport const validateLink = ({\r\n    fromNodeId,\r\n    fromPortId,\r\n    toNodeId,\r\n    toPortId,\r\n    chart,\r\n}: ValidateLink): boolean => {\r\n    const linkTuple = {\r\n        from: {\r\n            nodeId: fromNodeId,\r\n            portId: fromPortId,\r\n        },\r\n        to: {\r\n            nodeId: toNodeId,\r\n            portId: toPortId,\r\n        },\r\n    }\r\n\r\n\r\n    const validType = !(\r\n        chart.nodes[fromNodeId].ports[fromPortId].type ===\r\n        chart.nodes[toNodeId].ports[toPortId].type\r\n    )\r\n\r\n    \r\n    const targetIsParentNode = some(chart.links, link => link.from.nodeId === linkTuple.to.nodeId);\r\n    const sourceHasNoParent = some(chart.links, link => link.to.nodeId === linkTuple.from.nodeId);\r\n    const noLoop =  !(targetIsParentNode && sourceHasNoParent)\r\n\r\n    return validType && noLoop\r\n}","import { actions, IChart, IFlowChartCallbacks } from \"@mrblenny/react-flow-chart\";\r\nimport { AnyAction, createAction, createReducer } from \"@reduxjs/toolkit\";\r\nimport { find, mapValues } from \"lodash\";\r\nimport { Dispatch, useReducer } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { generateChart } from \"./generators\";\r\nimport { RootState } from \"./store\";\r\nimport { customCallbacks } from \"./customCallbacks\";\r\n\r\nexport const setChartProperty = createAction('setChartProperty', ({ nodeId, name, value }: { nodeId: string, name: string, value: boolean }) => ({\r\n    payload: {\r\n        nodeId,\r\n        name,\r\n        value\r\n    }\r\n}));\r\nexport const executeChartAction = createAction('executeChartAction', ({ action }) => ({\r\n    payload: {\r\n        action\r\n    }\r\n}));\r\n\r\ninterface usePipeline {\r\n    chart: IChart,\r\n    callbacks: IFlowChartCallbacks,\r\n    chartDispatch: Dispatch<AnyAction>\r\n}\r\n\r\nexport const usePipeline = (title: string): [IChart, IFlowChartCallbacks, Dispatch<AnyAction>] => {\r\n    const dispatch = useDispatch();\r\n    const pipeline = useSelector((state: RootState) => find(state.pipeline.pipelines, { title })!.chart);\r\n\r\n    const initialState: IChart = generateChart(pipeline);\r\n\r\n    const reducer = createReducer(initialState, {\r\n        [executeChartAction.type]: (state, { payload }) => {\r\n            payload.action(state);\r\n        },\r\n        [setChartProperty.type]: (state, { payload }) => {\r\n            state.nodes[payload.nodeId].properties[payload.name] = payload.value;\r\n        }\r\n    });\r\n\r\n    const [chart, chartDispatch] = useReducer(reducer, initialState);\r\n\r\n    const callbacks = {\r\n        ...mapValues(actions, (func: any) => (...args: any) => chartDispatch(executeChartAction({ action: func(...args) }))),\r\n        ...customCallbacks(chart, chartDispatch, dispatch),\r\n    }\r\n\r\n    return [chart, callbacks, chartDispatch]\r\n}","import { reduce } from \"lodash\";\r\nimport { chartTemplate, nodeTemplate } from \"./templates\";\r\nimport { PipelineChart, PipelineLink, PipelineNode } from \"./types\";\r\n\r\nconst generateNodes = (nodes:Array<PipelineNode>) =>\r\n    reduce(nodes, (prevNodes, node) => ({\r\n        ...prevNodes,\r\n        [node.name]: {\r\n            ...nodeTemplate,\r\n            id: node.name,\r\n            position: node.position,\r\n            properties: {\r\n                name: node.name,\r\n                os: node.os,\r\n                kernel: node.kernel,\r\n                host: node.host,\r\n                autoDeploy: node.autoDeploy,\r\n            }\r\n        }\r\n    }), {});\r\n\r\n\r\nconst generateLinks = (links:Array<PipelineLink>) =>\r\n    reduce(links, (prevLinks, link) => ({\r\n        ...prevLinks,\r\n        [link.id]: ({\r\n            id: link.id,\r\n            from: {\r\n                nodeId: link.from,\r\n                portId: 'port2'\r\n            },\r\n            to: {\r\n                nodeId: link.to,\r\n                portId: 'port1'\r\n            }\r\n        })\r\n    }), {})\r\n\r\n\r\nexport const generateChart = (pipeline:PipelineChart) => ({\r\n    ...chartTemplate,\r\n    nodes: generateNodes(pipeline.nodes),\r\n    links: generateLinks(pipeline.links)\r\n})\r\n","import { actions, IChart } from \"@mrblenny/react-flow-chart\";\r\nimport { AnyAction } from \"@reduxjs/toolkit\";\r\nimport { Dispatch } from \"react\";\r\nimport { addLink, removeLink, removeNode, setNodePosition } from \"./store/actions/pipeline\";\r\nimport { executeChartAction } from \"./usePipeline\";\r\n\r\n// Typescript does not accept spread operators with functions. There is an open bug\r\n// The offending lines will be ignored for now\r\n\r\nexport const customCallbacks = (chart: IChart, chartDispatch: Dispatch<AnyAction>, dispatch: Dispatch<AnyAction>) => {\r\n\r\n    return ({\r\n       onLinkComplete: (...args: any) => {\r\n            const actionLink = args[0];\r\n            const from = chart.nodes[actionLink.fromNodeId].properties.name\r\n            const to = chart.nodes[actionLink.toNodeId].properties.name\r\n            const link = {\r\n                from,\r\n                to\r\n            }\r\n\r\n            \r\n            // @ts-ignore\r\n            chartDispatch(executeChartAction({ action: actions.onLinkComplete(...args) }));\r\n\r\n            dispatch(addLink(link));\r\n\r\n            const argsWithChart = [{\r\n                ...actionLink,\r\n                chart\r\n            }]\r\n\r\n            // @ts-ignore\r\n            const isLinkValid = actionLink.config.validateLink(...argsWithChart);\r\n            if (isLinkValid) dispatch(addLink(link));\r\n        },\r\n        onDeleteKey: (...args: any) => {\r\n            const { selected } = chart;\r\n\r\n            if (selected.type === 'node') {\r\n                const nodeName = chart.nodes[selected.id!].properties.name;\r\n                dispatch(removeNode(nodeName));\r\n            } else if (selected.type === 'link') {\r\n                const selectedLink = chart.links[selected.id!];\r\n                const linkId = `${selectedLink.from.nodeId}_${selectedLink.to.nodeId}`\r\n                dispatch(removeLink(linkId));\r\n            }\r\n\r\n            // @ts-ignore\r\n            chartDispatch(executeChartAction({ action: actions.onDeleteKey(...args) }));\r\n        },\r\n        onDragNodeStop: (...args: any) => {\r\n            const { data } = args[0];\r\n\r\n            const position = {\r\n                x: data.x,\r\n                y: data.y\r\n            }\r\n\r\n            dispatch(setNodePosition(data.node.innerText, position));\r\n            // @ts-ignore\r\n            chartDispatch(executeChartAction({ action: actions.onDragNodeStop(...args) }));\r\n        }\r\n    })\r\n}"],"sourceRoot":""}